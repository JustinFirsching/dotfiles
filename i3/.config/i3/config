# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Alt Key
set $alt Mod1
# Win Key
set $win Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 0
new_window pixel 0

# Set wallpaper
exec_always --no-startup-id feh --bg-scale --randomize $HOME/.wallpapers

# Lock screen bind
bindsym $alt+ctrl+l exec --no-startup-id i3lock

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# Use Mouse+$alt to drag floating windows to their wanted position
floating_modifier $alt

# start a terminal
bindsym $alt+Return exec i3-sensible-terminal

# kill focused window
bindsym $alt+Shift+q kill

# start dmenu (a program launcher)
# bindsym $alt+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $alt+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $alt+h focus left
bindsym $alt+j focus down
bindsym $alt+k focus up
bindsym $alt+l focus right

# move focused window
bindsym $alt+Shift+h move left
bindsym $alt+Shift+j move down
bindsym $alt+Shift+k move up
bindsym $alt+Shift+l move right

# split in horizontal orientation
bindsym $alt+b split h

# split in vertical orientation
bindsym $alt+v split v

# enter fullscreen mode for the focused container
bindsym $alt+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $alt+s layout stacking
bindsym $alt+w layout tabbed
bindsym $alt+e layout toggle split

# toggle tiling / floating
bindsym $alt+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $alt+space focus mode_toggle

# focus the parent container
bindsym $alt+a focus parent

# focus the child container
#bindsym $alt+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $alt+1 workspace number $ws1
bindsym $alt+2 workspace number $ws2
bindsym $alt+3 workspace number $ws3
bindsym $alt+4 workspace number $ws4
bindsym $alt+5 workspace number $ws5
bindsym $alt+6 workspace number $ws6
bindsym $alt+7 workspace number $ws7
bindsym $alt+8 workspace number $ws8
bindsym $alt+9 workspace number $ws9
bindsym $alt+0 workspace number $ws10

# move focused container to workspace
bindsym $alt+Shift+1 move container to workspace number $ws1
bindsym $alt+Shift+2 move container to workspace number $ws2
bindsym $alt+Shift+3 move container to workspace number $ws3
bindsym $alt+Shift+4 move container to workspace number $ws4
bindsym $alt+Shift+5 move container to workspace number $ws5
bindsym $alt+Shift+6 move container to workspace number $ws6
bindsym $alt+Shift+7 move container to workspace number $ws7
bindsym $alt+Shift+8 move container to workspace number $ws8
bindsym $alt+Shift+9 move container to workspace number $ws9
bindsym $alt+Shift+0 move container to workspace number $ws10

# move workspace to next monitor
bindsym $alt+Shift+less move workspace to output left
bindsym $alt+Shift+greater move workspace to output right

# reload the configuration file
bindsym $alt+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $alt+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $alt+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $alt+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $alt+r mode "default"
}
bindsym $alt+r mode "resize"

# gaps
mode "gaps_outer" {
    bindsym shift+plus gaps outer all plus 1
    bindsym minus gaps outer all minus 1
    bindsym 0 gaps outer all set 10

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "gaps_inner" {
    bindsym shift+plus gaps inner all plus 1
    bindsym minus gaps inner all minus 1
    bindsym 0 gaps inner all set 10

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "gaps" {
    bindsym o mode "gaps_outer"
    bindsym i mode "gaps_inner"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $alt+g mode "gaps"

smart_borders on
gaps outer 10
gaps inner 10

# polybar
exec_always --no-startup-id sh $HOME/.config/polybar/launch.sh

# screen brightness
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 5 # decrease screen brightness

exec_always --no-startup-id picom
